{"version":3,"sources":["App.js","index.js"],"names":["Square","_ref","value","onSquareClick","React","createElement","className","onClick","Board","_ref2","xIsNext","squares","onPlay","currentMove","winner","calculateWinner","status","winnerStyle","handleClick","i","nextSquares","slice","backgroundColor","color","textAlign","fontWeight","Fragment","style","rows","row","columns","col","push","key","createBoard","Game","history","setHistory","useState","Array","fill","setCurrentMove","currentSquares","moves","map","move","description","isDisabled","nextMove","jumpTo","disabled","newHistory","length","lines","a","b","c","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.35c66a1d.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction Square({value, onSquareClick}) {\n  // const [value, setValue] = useState(null);\n\n  return <button \n    className=\"square\"\n    onClick={onSquareClick}\n    >\n      {value}\n    </button>;\n}\n\n\nfunction Board({ xIsNext, squares, onPlay, currentMove }){\n  const winner = calculateWinner(squares);\n  let status;\n  let winnerStyle = {};\n  \n  if (winner){\n    status = \"Winner: \" + winner;\n    winnerStyle = {\n      backgroundColor: 'yellow',\n      color: 'red',\n      textAlign: 'center',\n      fontWeight: 'bold'\n    }\n  }\n  else if (currentMove === 9){\n    status = \"Draw\";\n    winnerStyle = {\n      backgroundColor: 'yellow',\n      color: 'blue',\n      textAlign: 'center'\n    }\n  }\n  else{\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n    \n  }\n  \n  function handleClick(i) {\n    if(squares[i] || calculateWinner(squares)){\n      return;\n    }\n\n    const nextSquares = squares.slice();\n\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    }\n    else{\n      nextSquares[i] = \"O\";\n    }\n\n    onPlay(nextSquares);\n \n  }\n\n  function createBoard(squares) {\n    const rows = [];\n    // iterate through each row and push row as a list item to rows\n    for (let row = 0; row < 3; row++) {\n      const columns = [];\n      // iterate through each column and push column Square as a list item to columns\n      for (let col = 0 + row*3; col  < 3 + row*3; col++) {\n        columns.push(\n          <Square\n            key={col}\n            className=\"board-row\"\n            value={squares[col]}\n            onSquareClick={() => handleClick(col)}\n          />\n        );\n      }\n      rows.push(\n        <div key={row} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n    return rows;\n  }\n  return(\n    <>\n    <div className=\"status\"\n    style={winnerStyle}>\n      {status}\n      </div>\n      <div className=\"board-row\">\n      {createBoard(squares)}\n      </div>\n    </>\n  )\n}\n\nexport default function Game(){\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const newHistory = [...history.slice(0, currentMove + 1), nextSquares]\n    setHistory(newHistory);\n    setCurrentMove(newHistory.length - 1);\n  }\n\n  function jumpTo(nextMove){\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    const description = move === 0 ? 'Go to game start' : \n      (move === currentMove ? 'You are at move # ': 'Go to move # ') + move;\n\n    const style = move === currentMove ? { \n      color: 'white',\n      backgroundColor: 'green'\n  } : null;\n\n  const isDisabled = move === currentMove;\n\n    return (\n      <li key={move}>\n        <button\n          style={style}\n          onClick={() => jumpTo(move)}\n          disabled = {isDisabled}>\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} currentMove={currentMove} />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"sourceRoot":""}